{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Twitter Sentiment Prediction\n",
    "\n",
    "### 1.1 Introduction\n",
    "\n",
    "Taking a look at twitter, there are a lot of tweets generated every single second by different users. In addition, some of these tweets might be positive while the others might be negative. It would be really useful if machine learning and deep learning is deployed in real-time to classify the texts and tweets as positive, negative or neutral respectively. As a result of this, a lot of time and money would be saved by the company without the need to use manpower for these simple tasks respectively. \n",
    "\n",
    "In this machine learning project, we would be working with real-time twitter tweets and predicting the sentiment of the text whether it is positive, negative or neutral. With the help of deep neural networks along with hyperparameter tuning, we would be classifying the tweets, ensuring that there is a good business value for the company by analyzing the text and understanding the working of machine learning models. \n",
    "\n",
    "### 1.2 Metrics\n",
    "\n",
    "1. Accuracy\n",
    "2. Precision \n",
    "3. Recall \n",
    "\n",
    "### 1.3 Source \n",
    "The dataset is taken from Kaggle. It is available in the website below. Feel free to download the dataset. \n",
    "\n",
    "https://www.kaggle.com/c/tweet-sentiment-extraction/data\n",
    "\n",
    "## Table of Contents\n",
    "\n",
    "1. Reading the data\n",
    "2. Countplot of the Sentiment\n",
    "3. Positive Text WordCloud\n",
    "4. Negative Text WordCloud\n",
    "5. List of Stopwords\n",
    "6. Dividing the data into training and Cross Validation Data\n",
    "7. Function for Replacing Words\n",
    "8. Preprocessing the Text\n",
    "9. Tfidf Vectorizer\n",
    "10. Neural Network Model for Prediction \n",
    "11. Count Vectorizer\n",
    "12. Neural Network Model \n",
    "13. Plots of the Results \n",
    "14. Conclusion\n",
    "\n",
    "\n",
    "Let us now start the project by reading some useful libraries that we would be working with from the start. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 109,
   "metadata": {
    "execution": {
     "iopub.execute_input": "2021-06-21T19:00:07.392651Z",
     "iopub.status.busy": "2021-06-21T19:00:07.392267Z",
     "iopub.status.idle": "2021-06-21T19:00:13.077908Z",
     "shell.execute_reply": "2021-06-21T19:00:13.076748Z",
     "shell.execute_reply.started": "2021-06-21T19:00:07.392616Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Requirement already satisfied: wordcloud in /opt/conda/lib/python3.7/site-packages (1.8.1)\n",
      "Requirement already satisfied: pillow in /opt/conda/lib/python3.7/site-packages (from wordcloud) (7.2.0)\n",
      "Requirement already satisfied: numpy>=1.6.1 in /opt/conda/lib/python3.7/site-packages (from wordcloud) (1.19.5)\n",
      "Requirement already satisfied: matplotlib in /opt/conda/lib/python3.7/site-packages (from wordcloud) (3.4.1)\n",
      "Requirement already satisfied: cycler>=0.10 in /opt/conda/lib/python3.7/site-packages (from matplotlib->wordcloud) (0.10.0)\n",
      "Requirement already satisfied: pyparsing>=2.2.1 in /opt/conda/lib/python3.7/site-packages (from matplotlib->wordcloud) (2.4.7)\n",
      "Requirement already satisfied: kiwisolver>=1.0.1 in /opt/conda/lib/python3.7/site-packages (from matplotlib->wordcloud) (1.3.1)\n",
      "Requirement already satisfied: python-dateutil>=2.7 in /opt/conda/lib/python3.7/site-packages (from matplotlib->wordcloud) (2.8.1)\n",
      "Requirement already satisfied: six in /opt/conda/lib/python3.7/site-packages (from cycler>=0.10->matplotlib->wordcloud) (1.15.0)\n"
     ]
    }
   ],
